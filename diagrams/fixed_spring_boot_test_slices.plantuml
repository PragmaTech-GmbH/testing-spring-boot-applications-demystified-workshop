@startuml spring_boot_test_slices
rectangle "@SpringBootTest" as FullApp {
    [Controllers]
    [Services]
    [Repositories]
    [Security Filters]
    [MessageConverters]
    [Other Components]
    
    [Controllers] --> [Services]
    [Services] --> [Repositories]
}

rectangle "@WebMvcTest" as WebSlice {
    [Web Layer Only]
    [MockMvc]
    [Controller Under Test]
    [Security Filters]
    [MessageConverters]
    [Mock Services]
    
    [Web Layer Only] .> [Controller Under Test]
    [Web Layer Only] .> [Security Filters]
    [Web Layer Only] .> [MessageConverters]
    [Controller Under Test] ..> [Mock Services]
}

rectangle "@DataJpaTest" as DataSlice {
    [Data Layer Only]
    [Repository Under Test]
    [EntityManager]
    [DataSource]
    [TestEntityManager]
    
    [Data Layer Only] .> [Repository Under Test]
    [Repository Under Test] ..> [EntityManager]
    [TestEntityManager] ..> [EntityManager]
    [EntityManager] ..> [DataSource]
}

note bottom of FullApp
  @SpringBootTest loads the entire application context.
  Good for integration tests, but slower and more resource-intensive.
end note

note bottom of WebSlice
  @WebMvcTest loads only the web layer components.
  Faster than @SpringBootTest.
  Services are mocked.
end note

note bottom of DataSlice
  @DataJpaTest loads only the data layer components.
  Uses an in-memory database by default.
  Transactions are rolled back after each test.
end note

@enduml