@startuml spring_test_context_caching

rectangle "Spring Test Context Caching" {
    rectangle "Context Cache" as Cache {
        rectangle "Context 1\n[@SpringBootTest(properties = 'a=1')]" as Context1
        rectangle "Context 2\n[@SpringBootTest(properties = 'a=2')]" as Context2
        rectangle "Context 3\n[@WebMvcTest(BookController.class)]" as Context3
    }
    
    rectangle "Test Execution" {
        rectangle "Test A\n[@SpringBootTest(properties = 'a=1')]" as TestA
        rectangle "Test B\n[@SpringBootTest(properties = 'a=1')]" as TestB
        rectangle "Test C\n[@SpringBootTest(properties = 'a=2')]" as TestC
        rectangle "Test D\n[@SpringBootTest(properties = 'a=1')]\n[@DirtiesContext]" as TestD
    }
    
    TestA -right-> Context1: "1. Cache Miss\nCreate context"
    TestB -right-> Context1: "2. Cache Hit\nReuse context"
    TestC -right-> Context2: "3. Cache Miss\nCreate context"
    TestD -right-> Context1: "4. Cache Hit\nReuse context"
    TestD --> Context1: "5. Mark as dirty\nWill be evicted"
}

note bottom of TestA
  First test with these properties.
  Context is created and cached.
end note

note bottom of TestB
  Same context configuration as Test A.
  Reuses the cached context.
end note

note bottom of TestC
  Different property value.
  New context is created and cached.
end note

note bottom of TestD
  Same configuration as Test A and B, but
  @DirtiesContext marks the context as dirty.
  It will be evicted from the cache after this test.
end note

@enduml